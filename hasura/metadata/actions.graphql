type Mutation {
  DeleteRecipe(
    id: Int!
    user_id: Int!
  ): RemoveRecipeOutput!
}

type Mutation {
  NewTokenRequest(
    email: String!
  ): RegenerateEmailVerificationTokenResponse!
}

type Mutation {
  ProcessPayment(
    id: Int!
    tx_ref: String!
  ): ProcessPaymentOutput!
}

type Mutation {
  addRecipe(
    title: String!
    description: String!
    preparation_time: Int!
    featured_image: ImageInfo
    user_id: Int!
    category_id: Int!
    ingredients: [IngredientRequest!]!
    price: Int!
    steps: [StepRequest!]!
  ): AddRecipeResponseOutput!
}

type Mutation {
  buyRecipe(
    buyer_id: Int!
    recipe_id: Int!
    price: Int
  ): BuyRecipeOutput
}

type Query {
  login(
    email: String!
    password: String!
  ): LoginResponce
}

type Mutation {
  passwordResetRequest(
    email: String!
  ): ResetRequestOutput!
}

type Mutation {
  passwordUpdate(
    token: String!
    userId: Int!
    password: String!
  ): ResetedPasswordOutput!
}

type Mutation {
  signup(
    userName: String!
    email: String!
    phone: String!
    password: String!
    role: String
    image: ImageInfo
  ): SignedUpUserOutput!
}

type Mutation {
  updateProfile(
    userName: String!
    phone: String!
    userId: Int!
    image: ImageInfo
  ): UpdateResponce!
}

type Mutation {
  updateRecipe(
    id: Int!
    user_id: Int!
    title: String
    description: String
    preparation_time: Int
    featured_image: ImageInfo
    category_id: Int
    price: Int
  ): UpdateRecipeOutput!
}

type Mutation {
  updateRecipeImage(
    recipe_id: Int!
    images: [ImageInfo!]!
  ): [UploadResponce!]
}

type Mutation {
  uploadRecipeImage(
    recipe_id: Int!
    images: [ImageInfo!]!
    featuredImageIndex: Int!
  ): [UploadResponce!]
}

type Mutation {
  verifyEmail(
    verification_token: String!
    user_id: Int!
  ): ResetedPasswordOutput!
}

type Mutation {
  verifyPayment(
    tx_ref: String!
    id: Int!
  ): ProcessPaymentOutput!
}

input ImageInfo {
  name: String
  type: String
  base64String: String
}

input IngredientRequest {
  id: Int
  name: String!
  quantity: String
}

input StepRequest {
  id: Int
  step_number: Int!
  instruction: String
}

type LoginResponce {
  user: User
}

type User {
  id: Int!
  name: String!
  email: String!
  token: String!
  role: String!
  refreshToken: String!
}

type RegenerateEmailVerificationTokenResponse {
  message: String!
}

type ProcessPaymentOutput {
  message: String!
  status: String
}

type ResetRequestOutput {
  id: Int!
  message: String!
}

type ResetedPasswordOutput {
  message: String!
}

type SignedUpUserOutput {
  id: Int!
  userName: String!
  email: String!
  token: String!
  role: String!
  refreshToken: String!
}

type UpdateResponce {
  message: String!
}

type AddRecipeResponse {
  message: String!
}

type AddRecipeResponseOutput {
  id: Int!
  title: String!
  message: String!
}

type RemoveRecipeOutput {
  message: String!
}

type UpdateRecipeOutput {
  message: String!
}

type UploadResponce {
  url: String!
}

type BuyRecipeOutput {
  payment_id: Int!
  checkout_url: String!
  message: String!
  buyer_id: Int!
  recipe_id: Int!
  price: Int!
  seller_id: Int!
}

